{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gilli\\\\Desktop\\\\YBinhDu_XinYiLiao_Lab03\\\\react-client\\\\src\\\\components\\\\ListStudentsInCourse.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { withRouter } from 'react-router-dom'; //import Login from './Login';\n\nfunction ListStudentsInCourse(props) {\n  console.log(\"IN LIST STUDENTS IN COURSES --\" + props.match.params.courseCode);\n  const [data, setData] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  const [listError, setListError] = useState(false);\n  console.log(props.match.params.courseCode);\n  const apiUrl = \"http://localhost:3000/api/listStudentsInCourse/\" + props.match.params.courseCode;\n  useEffect(() => {\n    const fetchData = async () => {\n      axios.get(apiUrl).then(result => {\n        console.log('result.data:', result.data);\n        setData(result.data);\n        setShowLoading(false); //check if the student has logged in\n        // if (result.data.screen !== 'auth') {\n        // console.log('data in if:', result.data)\n        //  setData(result.data);\n        //  setShowLoading(false);\n        // }\n      }).catch(error => {\n        console.log('error in fetchData:', error);\n        setListError(true);\n      });\n    };\n\n    fetchData();\n  }, []); // const showDetail = (id) => {\n  // props.history.push({\n  //      pathname: '/show/' + id\n  // });\n  //}\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"List of Students in !\"), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, data.map((item, idx) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: idx,\n    action: true,\n    onClick: () => {\n      /*showDetail(item._id)*/\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 99\n    }\n  }, \"Student Number:\"), \" \", item.studentNumber, \", \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 144\n    }\n  }, \"Name:\"), \" \", item.firstName, \" \", item.lastName))));\n} //\n\n\nexport default withRouter(ListStudentsInCourse);","map":{"version":3,"sources":["C:/Users/gilli/Desktop/YBinhDu_XinYiLiao_Lab03/react-client/src/components/ListStudentsInCourse.js"],"names":["React","useState","useEffect","axios","ListGroup","Spinner","withRouter","ListStudentsInCourse","props","console","log","match","params","courseCode","data","setData","showLoading","setShowLoading","listError","setListError","apiUrl","fetchData","get","then","result","catch","error","map","item","idx","studentNumber","firstName","lastName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,UAAlE;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,UAA/B;AACA,QAAMO,MAAM,GAAG,oDAAoDZ,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,UAAtF;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,SAAS,GAAG,YAAY;AAC1BlB,MAAAA,KAAK,CAACmB,GAAN,CAAUF,MAAV,EACKG,IADL,CACUC,MAAM,IAAI;AACZf,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bc,MAAM,CAACV,IAAnC;AACAC,QAAAA,OAAO,CAACS,MAAM,CAACV,IAAR,CAAP;AACAG,QAAAA,cAAc,CAAC,KAAD,CAAd,CAHY,CAIZ;AACA;AACA;AACA;AACA;AACA;AACH,OAXL,EAWOQ,KAXP,CAWcC,KAAD,IAAW;AAChBjB,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCgB,KAAnC;AACAP,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,OAdL;AAeH,KAhBD;;AAiBAE,IAAAA,SAAS;AACZ,GAnBQ,EAmBN,EAnBM,CAAT,CARiC,CA6BjC;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKL,WAAW,iBAAI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACZ;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADY,CAFpB,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALJ,eAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACa,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACN,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,GAAG,EAAEA,GAArB;AAA0B,IAAA,MAAM,MAAhC;AAAiC,IAAA,OAAO,EAAE,MAAM;AAAE;AAA0B,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA9E,OAAsGD,IAAI,CAACE,aAA3G,qBAA2H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA3H,OAAyIF,IAAI,CAACG,SAA9I,OAA0JH,IAAI,CAACI,QAA/J,CADH,CADL,CANJ,CADJ;AAgBH,C,CACD;;;AACA,eAAe1B,UAAU,CAACC,oBAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { withRouter } from 'react-router-dom';\r\n//import Login from './Login';\r\n\r\nfunction ListStudentsInCourse(props) {\r\n    console.log(\"IN LIST STUDENTS IN COURSES --\" + props.match.params.courseCode)\r\n    const [data, setData] = useState([]);\r\n    const [showLoading, setShowLoading] = useState(true);\r\n    const [listError, setListError] = useState(false);\r\n    console.log(props.match.params.courseCode)\r\n    const apiUrl = \"http://localhost:3000/api/listStudentsInCourse/\" + props.match.params.courseCode;\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            axios.get(apiUrl)\r\n                .then(result => {\r\n                    console.log('result.data:', result.data)\r\n                    setData(result.data);\r\n                    setShowLoading(false);\r\n                    //check if the student has logged in\r\n                    // if (result.data.screen !== 'auth') {\r\n                    // console.log('data in if:', result.data)\r\n                    //  setData(result.data);\r\n                    //  setShowLoading(false);\r\n                    // }\r\n                }).catch((error) => {\r\n                    console.log('error in fetchData:', error)\r\n                    setListError(true)\r\n                });\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    // const showDetail = (id) => {\r\n    // props.history.push({\r\n    //      pathname: '/show/' + id\r\n    // });\r\n    //}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>}\r\n            <h3>List of Students in !</h3>\r\n            <ListGroup>\r\n                {data.map((item, idx) => (\r\n                    <ListGroup.Item key={idx} action onClick={() => { /*showDetail(item._id)*/ }}><b>Student Number:</b> {item.studentNumber}, <b>Name:</b> {item.firstName} {item.lastName}</ListGroup.Item>\r\n                ))}\r\n            </ListGroup>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n//\r\nexport default withRouter(ListStudentsInCourse);\r\n"]},"metadata":{},"sourceType":"module"}