{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gilli\\\\Desktop\\\\YBinhDu_XinYiLiao_Lab03\\\\react-client\\\\src\\\\components\\\\View.js\";\nimport React, { useState } from 'react'; //\n\nimport axios from 'axios'; //\n\nfunction View(props) {\n  // read the info from props, coming from the ancestor component\n  const {\n    screen,\n    setScreen\n  } = props; // return a stateful value and funcion to update it\n\n  const [data, setData] = useState(); // called when user clicks on Logout button\n  // to clear the cookie and set the screen state variable \n  // back to its initial state.\n\n  const deleteCookie = async () => {\n    try {\n      await axios.get('/signout');\n      setScreen('auth');\n    } catch (e) {\n      console.log(e);\n    }\n  }; // called when user clicks on Get Data button\n  // end-point demonstrates another example for the use\n  // of cookie specific response from the server.\n\n\n  const getData = async () => {\n    try {\n      const res = await axios.get('/get-data');\n      console.log(res.data);\n      setData(res.data);\n    } catch (e) {\n      console.log(e);\n    }\n  }; //\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"screen\", screen), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"data\", data), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Get Data\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deleteCookie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Log out\"));\n} //\n\n\nexport default View;","map":{"version":3,"sources":["C:/Users/gilli/Desktop/YBinhDu_XinYiLiao_Lab03/react-client/src/components/View.js"],"names":["React","useState","axios","View","props","screen","setScreen","data","setData","deleteCookie","get","e","console","log","getData","res"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBF,KAA9B,CAFmB,CAGnB;;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC,CAJmB,CAKnB;AACA;AACA;;AACA,QAAMQ,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMP,KAAK,CAACQ,GAAN,CAAU,UAAV,CAAN;AACAJ,MAAAA,SAAS,CAAC,MAAD,CAAT;AACD,KAHD,CAGE,OAAOK,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GAPD,CARmB,CAgBnB;AACA;AACA;;;AACA,QAAMG,OAAO,GAAG,YAAY;AAC1B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMb,KAAK,CAACQ,GAAN,CAAU,WAAV,CAAlB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACR,IAAhB;AACAC,MAAAA,OAAO,CAACO,GAAG,CAACR,IAAL,CAAP;AACD,KAJD,CAIE,OAAOI,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GARD,CAnBmB,CA4BnB;;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUN,MAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQE,IAAR,CAFF,eAGE;AAAQ,IAAA,OAAO,EAAEO,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,IAAA,OAAO,EAAEL,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CADF;AAQD,C,CACD;;;AACA,eAAeN,IAAf","sourcesContent":["import React, { useState } from 'react';\r\n//\r\nimport axios from 'axios';\r\n//\r\nfunction View(props) {\r\n  // read the info from props, coming from the ancestor component\r\n  const { screen, setScreen } = props;\r\n  // return a stateful value and funcion to update it\r\n  const [data, setData] = useState();\r\n  // called when user clicks on Logout button\r\n  // to clear the cookie and set the screen state variable \r\n  // back to its initial state.\r\n  const deleteCookie = async () => {\r\n    try {\r\n      await axios.get('/signout');\r\n      setScreen('auth');\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  // called when user clicks on Get Data button\r\n  // end-point demonstrates another example for the use\r\n  // of cookie specific response from the server.\r\n  const getData = async () => {\r\n    try {\r\n      const res = await axios.get('/get-data');\r\n      console.log(res.data)\r\n      setData(res.data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  //\r\n  return (\r\n    <div>\r\n      <p>screen{screen}</p>\r\n      <p>data{data}</p>\r\n      <button onClick={getData}>Get Data</button>\r\n      <button onClick={deleteCookie}>Log out</button>\r\n    </div>\r\n  );\r\n}\r\n//\r\nexport default View;"]},"metadata":{},"sourceType":"module"}