{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gilli\\\\Desktop\\\\YBinhDu_XinYiLiao_Lab03\\\\react-client\\\\src\\\\components\\\\ListCourses.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { withRouter } from 'react-router-dom';\nimport Login from './Login';\n\nfunction ListCourses(props) {\n  const [data, setData] = useState([]);\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/api/courses\";\n  useEffect(() => {\n    const fetchData = async () => {\n      axios.get(apiUrl).then(result => {\n        console.log('result.data:', result.data); //check if the user has logged in\n        //if(result.data.screen !== 'auth')\n        //{\n\n        console.log('data in if:', result.data);\n        setData(result.data);\n        setShowLoading(false); //}\n      }).catch(error => {\n        console.log('error in fetchData:', error);\n      });\n    };\n\n    fetchData();\n  }, []);\n\n  const listStudentsInCourse = courseCode => {\n    props.history.push({\n      pathname: '/listStudentsInCourse/' + courseCode\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, data.length !== 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"This is the list of all the courses taken by different students!\"), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, data.map((item, idx) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: idx,\n    action: true,\n    onClick: () => {\n      listStudentsInCourse(item.courseCode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 120\n    }\n  }, \"Course Code: \"), item.courseCode, \", \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 159\n    }\n  }, \"Course Name: \"), item.courseName)))) : /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }));\n} //\n\n\nexport default withRouter(ListCourses);","map":{"version":3,"sources":["C:/Users/gilli/Desktop/YBinhDu_XinYiLiao_Lab03/react-client/src/components/ListCourses.js"],"names":["React","useState","useEffect","axios","ListGroup","Spinner","withRouter","Login","ListCourses","props","data","setData","showLoading","setShowLoading","apiUrl","fetchData","get","then","result","console","log","catch","error","listStudentsInCourse","courseCode","history","push","pathname","length","map","item","idx","courseName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMa,MAAM,GAAG,mCAAf;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,SAAS,GAAG,YAAY;AAC1BZ,MAAAA,KAAK,CAACa,GAAN,CAAUF,MAAV,EACKG,IADL,CACUC,MAAM,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,MAAM,CAACR,IAAnC,EADY,CAEZ;AACA;AACA;;AAEAS,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAAM,CAACR,IAAlC;AACAC,QAAAA,OAAO,CAACO,MAAM,CAACR,IAAR,CAAP;AACAG,QAAAA,cAAc,CAAC,KAAD,CAAd,CARY,CASZ;AACH,OAXL,EAWOQ,KAXP,CAWcC,KAAD,IAAW;AAChBH,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAnC;AACH,OAbL;AAcH,KAfD;;AAgBAP,IAAAA,SAAS;AACZ,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,QAAMQ,oBAAoB,GAAIC,UAAD,IAAgB;AACzCf,IAAAA,KAAK,CAACgB,OAAN,CAAcC,IAAd,CAAmB;AACfC,MAAAA,QAAQ,EAAE,2BAA2BH;AADtB,KAAnB;AAGH,GAJD;;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMd,IAAI,CAACkB,MAAL,KAAgB,CAAhB,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,WAAW,iBAAI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACZ;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADY,CADlB,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAJF,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACmB,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACN,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,GAAG,EAAEA,GAArB;AAA0B,IAAA,MAAM,MAAhC;AAAiC,IAAA,OAAO,EAAE,MAAM;AAAER,MAAAA,oBAAoB,CAACO,IAAI,CAACN,UAAN,CAApB;AAAuC,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA2F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA3F,EAAgHM,IAAI,CAACN,UAArH,qBAAkI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAlI,EAAuJM,IAAI,CAACE,UAA5J,CADH,CADL,CALF,CADJ,gBAYI,oBAAE,KAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbV,CADJ;AAmBH,C,CACD;;;AACA,eAAe1B,UAAU,CAACE,WAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Login from './Login';\r\n\r\nfunction ListCourses(props) {\r\n    const [data, setData] = useState([]);\r\n    const [showLoading, setShowLoading] = useState(true);\r\n    const apiUrl = \"http://localhost:3000/api/courses\";\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            axios.get(apiUrl)\r\n                .then(result => {\r\n                    console.log('result.data:', result.data)\r\n                    //check if the user has logged in\r\n                    //if(result.data.screen !== 'auth')\r\n                    //{\r\n\r\n                    console.log('data in if:', result.data)\r\n                    setData(result.data);\r\n                    setShowLoading(false);\r\n                    //}\r\n                }).catch((error) => {\r\n                    console.log('error in fetchData:', error)\r\n                });\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const listStudentsInCourse = (courseCode) => {\r\n        props.history.push({\r\n            pathname: '/listStudentsInCourse/' + courseCode,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { data.length !== 0\r\n                ? <div>\r\n                    {showLoading && <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>}\r\n                    <h2>This is the list of all the courses taken by different students!</h2>\r\n                    <ListGroup>\r\n                        {data.map((item, idx) => (\r\n                            <ListGroup.Item key={idx} action onClick={() => { listStudentsInCourse(item.courseCode) }}><b>Course Code: </b>{item.courseCode}, <b>Course Name: </b>{item.courseName}</ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                </div>\r\n                : < Login />\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n//\r\nexport default withRouter(ListCourses);\r\n"]},"metadata":{},"sourceType":"module"}