{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gilli\\\\Desktop\\\\YBinhDu_XinYiLiao_Lab03\\\\react-client\\\\src\\\\components\\\\Login.js\";\nimport React, { useState, useEffect } from 'react'; //import ReactDOM from 'react-dom';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'; //\n\nimport View from './View'; //\n\nfunction App(props) {\n  //state variable for the screen, admin or student\n  const {\n    setIsLogIn\n  } = props;\n  const [screen, setScreen] = useState('auth'); //store input field data, student Number and password\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const apiUrl = \"http://localhost:3000/signin\"; //send student email and password to the server\n  // for initial authentication\n\n  const auth = async () => {\n    console.log('calling auth');\n    console.log(email);\n\n    try {\n      //make a get request to /authenticate end-point on the server\n      const loginData = {\n        auth: {\n          email,\n          password\n        }\n      }; //call api\n\n      const res = await axios.post(apiUrl, loginData);\n      console.log(res.data.auth);\n      console.log(res.data.screen); //process the response\n\n      if (res.data.screen !== undefined) {\n        sessionStorage.setItem('email', res.data.screen);\n        sessionStorage.setItem('studentNumber', res.data.studentNumber);\n        setScreen(res.data.screen);\n        setIsLogIn(true);\n      }\n    } catch (e) {\n      //print the error\n      console.log(e);\n    }\n  }; //check if the student already logged-in\n\n\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---'); //\n\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  }; //runs the first time the view is rendered\n  //to check if student is signed in\n\n\n  useEffect(() => {\n    readCookie();\n    setScreen(document.cookie.includes(\"token\") ? sessionStorage.getItem(\"email\") : \"auth\");\n  }, [setScreen]); //only the first render\n  //\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, screen === 'auth' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }\n  }, \"Login to create/update/drop/view course\")), /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \" Log In \"))) : /*#__PURE__*/React.createElement(View, {\n    screen: screen,\n    setScreen: setScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/gilli/Desktop/YBinhDu_XinYiLiao_Lab03/react-client/src/components/Login.js"],"names":["React","useState","useEffect","Jumbotron","Form","Button","axios","View","App","props","setIsLogIn","screen","setScreen","email","setEmail","password","setPassword","apiUrl","auth","console","log","loginData","res","post","data","undefined","sessionStorage","setItem","studentNumber","e","readCookie","get","document","cookie","includes","getItem","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AACA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,MAAD,CAApC,CAHkB,CAIlB;;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,EAAxC;AACA,QAAMgB,MAAM,GAAG,8BAAf,CAPkB,CAQlB;AACA;;AACA,QAAMC,IAAI,GAAG,YAAY;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;;AACA,QAAI;AACF;AACA,YAAMQ,SAAS,GAAG;AAAEH,QAAAA,IAAI,EAAE;AAAEL,UAAAA,KAAF;AAASE,UAAAA;AAAT;AAAR,OAAlB,CAFE,CAGF;;AACA,YAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAWN,MAAX,EAAmBI,SAAnB,CAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACE,IAAJ,CAASN,IAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACE,IAAJ,CAASb,MAArB,EANE,CAOF;;AACA,UAAIW,GAAG,CAACE,IAAJ,CAASb,MAAT,KAAoBc,SAAxB,EAAmC;AACjCC,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCL,GAAG,CAACE,IAAJ,CAASb,MAAzC;AACAe,QAAAA,cAAc,CAACC,OAAf,CAAuB,eAAvB,EAAwCL,GAAG,CAACE,IAAJ,CAASI,aAAjD;AACAhB,QAAAA,SAAS,CAACU,GAAG,CAACE,IAAJ,CAASb,MAAV,CAAT;AACAD,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,KAdD,CAcE,OAAOmB,CAAP,EAAU;AAAE;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAYS,CAAZ;AACD;AAEF,GArBD,CAVkB,CAiClB;;;AACA,QAAMC,UAAU,GAAG,YAAY;AAC7B,QAAI;AACFX,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EADE,CAGF;;AACA,YAAME,GAAG,GAAG,MAAMhB,KAAK,CAACyB,GAAN,CAAU,cAAV,CAAlB,CAJE,CAKF;;AACA,UAAIT,GAAG,CAACE,IAAJ,CAASb,MAAT,KAAoBc,SAAxB,EAAmC;AACjCb,QAAAA,SAAS,CAACU,GAAG,CAACE,IAAJ,CAASb,MAAV,CAAT;AAEAQ,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACE,IAAJ,CAASb,MAArB;AACD;AACF,KAXD,CAWE,OAAOkB,CAAP,EAAU;AACVjB,MAAAA,SAAS,CAAC,MAAD,CAAT;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYS,CAAZ;AACD;AACF,GAhBD,CAlCkB,CAmDlB;AACA;;;AACA3B,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,UAAU;AACVlB,IAAAA,SAAS,CAAEoB,QAAQ,CAACC,MAAV,CAAkBC,QAAlB,CAA2B,OAA3B,IAAsCR,cAAc,CAACS,OAAf,CAAuB,OAAvB,CAAtC,GAAwE,MAAzE,CAAT;AACD,GAHQ,EAGN,CAACvB,SAAD,CAHM,CAAT,CArDkB,CAwDD;AACjB;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,KAAK,MAAX,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAL,CADA,eAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,IAAI,EAAC,OAAhC;AAAwC,IAAA,EAAE,EAAC,OAA3C;AAAmD,IAAA,QAAQ,EAAGkB,CAAD,IAAOf,QAAQ,CAACe,CAAC,CAACO,MAAF,CAASC,KAAV,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,IAAI,EAAC,UAAnC;AAA8C,IAAA,EAAE,EAAC,UAAjD;AAA4D,IAAA,QAAQ,EAAGR,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACO,MAAF,CAASC,KAAV,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,eASE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAwC,IAAA,OAAO,EAAEnB,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CAFA,CADH,gBAeG,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEP,MAAd;AAAsB,IAAA,SAAS,EAAEC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBN,CADF;AAqBD;;AAED,eAAeJ,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n//import ReactDOM from 'react-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n//\nimport View from './View'\n//\nfunction App(props) {\n  //state variable for the screen, admin or student\n  const { setIsLogIn } = props\n  const [screen, setScreen] = useState('auth');\n  //store input field data, student Number and password\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const apiUrl = \"http://localhost:3000/signin\";\n  //send student email and password to the server\n  // for initial authentication\n  const auth = async () => {\n    console.log('calling auth')\n    console.log(email)\n    try {\n      //make a get request to /authenticate end-point on the server\n      const loginData = { auth: { email, password } }\n      //call api\n      const res = await axios.post(apiUrl, loginData);\n      console.log(res.data.auth)\n      console.log(res.data.screen)\n      //process the response\n      if (res.data.screen !== undefined) {\n        sessionStorage.setItem('email', res.data.screen);\n        sessionStorage.setItem('studentNumber', res.data.studentNumber);\n        setScreen(res.data.screen);\n        setIsLogIn(true);\n      }\n    } catch (e) { //print the error\n      console.log(e);\n    }\n\n  };\n\n  //check if the student already logged-in\n  const readCookie = async () => {\n    try {\n      console.log('--- in readCookie function ---');\n\n      //\n      const res = await axios.get('/read_cookie');\n      // \n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n\n        console.log(res.data.screen)\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  };\n  //runs the first time the view is rendered\n  //to check if student is signed in\n  useEffect(() => {\n    readCookie();\n    setScreen((document.cookie).includes(\"token\") ? sessionStorage.getItem(\"email\") : \"auth\");\n  }, [setScreen]); //only the first render\n  //\n  return (\n    <div>\n      {screen === 'auth'\n        ? <div>\n          <div><h2>Login to create/update/drop/view course</h2></div>\n          <Jumbotron>\n            <Form.Group>\n              <Form.Label>Email</Form.Label>\n              <Form.Control type='email' name='email' id='email' onChange={(e) => setEmail(e.target.value)} ></Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Password</Form.Label>\n              <Form.Control type='password' name='password' id='password' onChange={(e) => setPassword(e.target.value)}></Form.Control>\n            </Form.Group>\n            <Button variant='primary' type='submit' onClick={auth}> Log In </Button>\n          </Jumbotron>\n        </div>\n        : <View screen={screen} setScreen={setScreen} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}