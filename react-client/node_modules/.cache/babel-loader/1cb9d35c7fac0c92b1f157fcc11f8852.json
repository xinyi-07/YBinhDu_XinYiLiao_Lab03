{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gilli\\\\Desktop\\\\YBinhDu_XinYiLiao_Lab03\\\\react-client\\\\src\\\\components\\\\EditCourse.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction EditCourse(props) {\n  console.log('edituser props:', props.match.params);\n  const [course, setCourse] = useState({\n    _id: '',\n    courseCode: '',\n    courseName: '',\n    section: '',\n    semester: ''\n  });\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/api/courses/\" + props.match.params.id; //runs only once after the first render\n\n  useEffect(() => {\n    setShowLoading(false); //call api\n\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      setCourse(result.data);\n      console.log(result.data);\n      setShowLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const updateCourse = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      courseCode: course.courseCode,\n      courseName: course.courseName,\n      section: course.section,\n      semester: course.semester\n    };\n    axios.put(apiUrl, data).then(result => {\n      console.log('after calling put to update', result.data);\n      setShowLoading(false);\n      props.history.push('/showcourse/' + result.data._id);\n    }).catch(error => setShowLoading(false));\n  }; //runs when user enters a field\n\n\n  const onChange = e => {\n    e.persist();\n    setCourse({ ...course,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: updateCourse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \" Course Code\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"courseCode\",\n    id: \"courseCode\",\n    placeholder: \"Enter course code\",\n    value: course.courseCode,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \" Course Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"courseName\",\n    id: \"courseName\",\n    placeholder: \"Enter course name\",\n    value: course.courseName,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \" Section\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"section\",\n    id: \"section\",\n    placeholder: \"Enter section\",\n    value: course.section,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \" Semester\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"semester\",\n    id: \"semester\",\n    placeholder: \"Enter semester\",\n    value: course.semester,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Update Course\"))));\n}\n\nexport default withRouter(EditCourse);","map":{"version":3,"sources":["C:/Users/gilli/Desktop/YBinhDu_XinYiLiao_Lab03/react-client/src/components/EditCourse.js"],"names":["React","useState","useEffect","axios","Spinner","Jumbotron","Form","Button","withRouter","EditCourse","props","console","log","match","params","course","setCourse","_id","courseCode","courseName","section","semester","showLoading","setShowLoading","apiUrl","id","fetchData","result","data","updateCourse","e","preventDefault","put","then","history","push","catch","error","onChange","persist","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction EditCourse(props) {\r\n    console.log('edituser props:', props.match.params)\r\n    const [course, setCourse] = useState({ _id: '', courseCode: '', courseName: '', section: '', semester: '' });\r\n    const [showLoading, setShowLoading] = useState(true);\r\n    const apiUrl = \"http://localhost:3000/api/courses/\" + props.match.params.id;\r\n    //runs only once after the first render\r\n    useEffect(() => {\r\n        setShowLoading(false);\r\n        //call api\r\n        const fetchData = async () => {\r\n            const result = await axios(apiUrl);\r\n            setCourse(result.data);\r\n            console.log(result.data);\r\n            setShowLoading(false);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const updateCourse = (e) => {\r\n        setShowLoading(true);\r\n        e.preventDefault();\r\n        const data = { courseCode: course.courseCode, courseName: course.courseName, section: course.section, semester: course.semester };\r\n        axios.put(apiUrl, data)\r\n            .then((result) => {\r\n                console.log('after calling put to update', result.data)\r\n                setShowLoading(false);\r\n                props.history.push('/showcourse/' + result.data._id)\r\n            }).catch((error) => setShowLoading(false));\r\n    };\r\n    //runs when user enters a field\r\n    const onChange = (e) => {\r\n        e.persist();\r\n        setCourse({ ...course, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showLoading &&\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            }\r\n            <Jumbotron>\r\n                <Form onSubmit={updateCourse}>\r\n                    <Form.Group>\r\n                        <Form.Label> Course Code</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"courseCode\" id=\"courseCode\" placeholder=\"Enter course code\" value={course.courseCode} onChange={onChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label> Course Name</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"courseName\" id=\"courseName\" placeholder=\"Enter course name\" value={course.courseName} onChange={onChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label> Section</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"section\" id=\"section\" placeholder=\"Enter section\" value={course.section} onChange={onChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label> Semester</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"semester\" id=\"semester\" placeholder=\"Enter semester\" value={course.semester} onChange={onChange} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Update Course\r\n          </Button>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(EditCourse);\r\n"]},"metadata":{},"sourceType":"module"}