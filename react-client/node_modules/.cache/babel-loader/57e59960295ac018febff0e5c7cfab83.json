{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gilli\\\\Desktop\\\\YBinhDu_XinYiLiao_Lab03\\\\react-client\\\\src\\\\components\\\\EditStudent.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction EditStudent(props) {\n  const [student, setStudent] = useState({\n    _id: '',\n    studentNumber: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    phone: '',\n    email: '',\n    program: ''\n  });\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/students/\" + props.match.params.id; //runs only once after the first render\n\n  useEffect(() => {\n    setShowLoading(false); //call api\n\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      setStudent(result.data);\n      console.log(result.data);\n      setShowLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const updateStudent = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      firstName: student.firstName,\n      lastName: student.lastName,\n      address: student.address,\n      city: student.city,\n      phone: student.phone,\n      email: student.email,\n      program: student.program\n    };\n    axios.put(apiUrl, data).then(result => {\n      setShowLoading(false);\n      props.history.push('/show/' + result.data._id);\n    }).catch(error => setShowLoading(false));\n  }; //runs when student enters a field\n\n\n  const onChange = e => {\n    e.persist();\n    setStudent({ ...student,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, showLoading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Loading...\")), /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: updateStudent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \" First Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    placeholder: \"Enter first name\",\n    value: student.firstName,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \" Last Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    placeholder: \"Enter last name\",\n    value: student.lastName,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \" Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"address\",\n    id: \"address\",\n    rows: \"3\",\n    placeholder: \"Enter address\",\n    value: student.address,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \" City\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"city\",\n    id: \"city\",\n    rows: \"3\",\n    placeholder: \"Enter city\",\n    value: student.city,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \" Phone Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"phone\",\n    id: \"phone\",\n    rows: \"3\",\n    placeholder: \"Enter phone number\",\n    value: student.phone,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \" Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    rows: \"3\",\n    placeholder: \"Enter email\",\n    value: student.email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \" Program\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"program\",\n    id: \"program\",\n    rows: \"3\",\n    placeholder: \"Enter program\",\n    value: student.program,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Update\"))));\n}\n\nexport default withRouter(EditStudent);","map":{"version":3,"sources":["C:/Users/gilli/Desktop/YBinhDu_XinYiLiao_Lab03/react-client/src/components/EditStudent.js"],"names":["React","useState","useEffect","axios","Spinner","Jumbotron","Form","Button","withRouter","EditStudent","props","student","setStudent","_id","studentNumber","password","firstName","lastName","address","city","phone","email","program","showLoading","setShowLoading","apiUrl","match","params","id","fetchData","result","data","console","log","updateStudent","e","preventDefault","put","then","history","push","catch","error","onChange","persist","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction EditStudent(props) {\r\n    const [student, setStudent] = useState({\r\n        _id: '', studentNumber: '', password: '', firstName: '', lastName: '',\r\n        address: '', city: '', phone: '', email: '', program: ''\r\n    });\r\n    const [showLoading, setShowLoading] = useState(true);\r\n    const apiUrl = \"http://localhost:3000/students/\" + props.match.params.id;\r\n    //runs only once after the first render\r\n    useEffect(() => {\r\n        setShowLoading(false);\r\n        //call api\r\n        const fetchData = async () => {\r\n            const result = await axios(apiUrl);\r\n            setStudent(result.data);\r\n            console.log(result.data);\r\n            setShowLoading(false);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const updateStudent = (e) => {\r\n        setShowLoading(true);\r\n        e.preventDefault();\r\n        const data = {\r\n            firstName: student.firstName, lastName: student.lastName, address: student.address,\r\n            city: student.city, phone: student.phone,\r\n            email: student.email, program: student.program\r\n        };\r\n        axios.put(apiUrl, data)\r\n            .then((result) => {\r\n                setShowLoading(false);\r\n                props.history.push('/show/' + result.data._id)\r\n            }).catch((error) => setShowLoading(false));\r\n    };\r\n    //runs when student enters a field\r\n    const onChange = (e) => {\r\n        e.persist();\r\n        setStudent({ ...student, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {showLoading &&\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            }\r\n            <Jumbotron>\r\n                <Form onSubmit={updateStudent}>\r\n                    <Form.Group>\r\n                        <Form.Label> First Name</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"Enter first name\" value={student.firstName} onChange={onChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label> Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Enter last name\" value={student.lastName} onChange={onChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label> Address</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"address\" id=\"address\" rows=\"3\" placeholder=\"Enter address\" value={student.address} onChange={onChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label> City</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"city\" id=\"city\" rows=\"3\" placeholder=\"Enter city\" value={student.city} onChange={onChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label> Phone Number</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"phone\" id=\"phone\" rows=\"3\" placeholder=\"Enter phone number\" value={student.phone} onChange={onChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label> Email</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"email\" id=\"email\" rows=\"3\" placeholder=\"Enter email\" value={student.email} onChange={onChange} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label> Program</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"program\" id=\"program\" rows=\"3\" placeholder=\"Enter program\" value={student.program} onChange={onChange} />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Update\r\n          </Button>\r\n                </Form>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(EditStudent);\r\n"]},"metadata":{},"sourceType":"module"}